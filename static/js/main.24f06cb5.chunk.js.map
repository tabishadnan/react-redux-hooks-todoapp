{"version":3,"sources":["Hooks/useInputState.js","Hooks/useAddTodoState.js","Components/TodoForm.js","Hooks/useEditTodoState.js","Components/TodoList.js","Components/TodoApp.js","App.js","Store/reducer.js","index.js"],"names":["useInputState","val","dispatch","useDispatch","e","type","event","useAddTodoState","todo","TodoForm","data","useSelector","state","name","value","updateValue","todos","setTodo","className","id","onChange","onClick","useEditTodoState","index","edittodoindex","editInputValue","eValue","eIndex","sIndex","removetodoindex","TodoList","setETodo","setEditInputVal","setSaveTodo","setRemoveTodo","map","isShowInput","todoname","target","TodoApp","App","initialState","reducer","action","todoArrCopy","concat","todoArr","splice","store","createStore","Reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24f06cb5.chunk.js","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\nconst useInputState = (val) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (e) => {\r\n        dispatch({type : \"UPDATEINPUTVAL\", event : e})\r\n    };\r\n\r\n    return [val, handleChange];\r\n\r\n}\r\n\r\nexport default useInputState;","import { useDispatch } from 'react-redux';\r\n\r\nconst useAddTodoState = (todo) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addTodo = () => {\r\n        dispatch({type : \"ADDTODOS\"})\r\n    };\r\n\r\n    return [todo, addTodo];\r\n\r\n}\r\n\r\nexport default useAddTodoState;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useInputState from '../Hooks/useInputState';\r\nimport useAddTodoState from '../Hooks/useAddTodoState';\r\n\r\nconst TodoForm = () => {\r\n\r\n    const data = useSelector(state => state);\r\n\r\n    const [value, updateValue] = useInputState(data.name);\r\n\r\n    const [todo, setTodo] = useAddTodoState(data.todos);\r\n\r\n    return (\r\n        <div className=\"add-todo-input-wrapper\">\r\n            <input type=\"text\" name=\"name\" id=\"add-todo\" value={value} onChange={updateValue} />\r\n            <button className=\"bg-light-sea-green\" onClick={setTodo}>Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import { useDispatch } from 'react-redux';\r\n\r\nconst useEditTodoState = (val) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleIsShowInput = (index) => {\r\n        dispatch({type : \"ISSHOWINPUT\", edittodoindex : index})\r\n    };\r\n\r\n    const handleEditInpuVal = (editInputValue, index) => {\r\n        dispatch({ type: 'EDITINPUTTODO', eValue: editInputValue, eIndex: index, })\r\n    };\r\n\r\n    const handleSaveTodo = (index) => {\r\n        dispatch({type : \"SAVETODO\", sIndex : index})\r\n    };\r\n\r\n    const handleRemoveTodo = (index) => {\r\n        dispatch({type : \"REMOVETODO\", removetodoindex : index})\r\n    };\r\n\r\n    return [val, handleIsShowInput, handleEditInpuVal, handleSaveTodo, handleRemoveTodo];\r\n\r\n}\r\n\r\nexport default useEditTodoState;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useEditTodoState from '../Hooks/useEditTodoState';\r\n\r\nconst TodoList = () => {\r\n\r\n    const data = useSelector(state => state);\r\n\r\n    const todos = data.todos;\r\n\r\n    const [eTodo, setETodo, setEditInputVal, setSaveTodo, setRemoveTodo] = useEditTodoState();\r\n\r\n\r\n    return (\r\n        <div className=\"todo-list-wrapper\">\r\n            {!!todos && todos.map((todo, index) => {\r\n                return (\r\n                    <div className=\"todo\" key={`${todo} ` + `${index}`}>\r\n                        {!todo.isShowInput && <span className=\"todo-heading\">{todo.todoname}</span>}\r\n                        {todo.isShowInput && <input type=\"text\" name=\"name\" id=\"edit-todo\" value={todo.todoname} onChange={(e) => setEditInputVal(e.target.value, index)} />}\r\n                        {!todo.isShowInput && <button onClick={() => setETodo(index)}>Edit</button>}\r\n                        <button onClick={() => setSaveTodo(index)}>Save</button>\r\n                        <button onClick={() => setRemoveTodo(index)}>Delete</button>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoList from './TodoList';\r\n\r\nconst TodoApp = () => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row mt-5 mb-5\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"todo-wrapper\">\r\n                        <h1 className=\"todos-heading\">TODOs</h1>\r\n                        <TodoForm />\r\n                        <TodoList />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoApp;","import './App.css';\nimport TodoApp from './Components/TodoApp';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row bg-light-sea-green\">\n        <TodoApp />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    name: \"\",\r\n    todos: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    let todoArrCopy = [...state.todos];\r\n\r\n    switch (action.type) {\r\n        case \"UPDATEINPUTVAL\":\r\n            return {\r\n                ...state,\r\n                name: action.event.target.value,\r\n            };\r\n        case \"ADDTODOS\":\r\n            return {\r\n                ...state,\r\n                todos: state.todos.concat({\r\n                    todoname: state.name,\r\n                    isShowInput: false\r\n                }),\r\n                name: \"\",\r\n            };\r\n        case \"ISSHOWINPUT\":\r\n            todoArrCopy[action.edittodoindex].isShowInput = true;\r\n            return {\r\n                ...state,\r\n                todos: todoArrCopy,\r\n            };\r\n        case \"EDITINPUTTODO\":\r\n            todoArrCopy[action.eIndex].todoname = action.eValue;\r\n            return {\r\n                ...state,\r\n                todos: todoArrCopy,\r\n            };\r\n        case \"SAVETODO\":\r\n            todoArrCopy[action.sIndex].isShowInput = false;\r\n            return {\r\n                ...state,\r\n                todoArr: todoArrCopy,\r\n                name: \"\",\r\n            };\r\n        case \"REMOVETODO\":\r\n            todoArrCopy.splice(action.removetodoindex, 1);\r\n            return {\r\n                ...state,\r\n                todos : todoArrCopy,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Reducer from './Store/reducer';\n\nconst store = createStore(Reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}